C:\class250615\react>mkdir lesson04_svr
프로젝트 초기화
C:\class250615\react\lesson04_svr>npm init -y
package.json 생성.
Wrote to C:\class250615\react\lesson04_svr\package.json:

그 내역이 아래와 같은 내용
{
  "name": "lesson04_svr",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": ""
}


필요한 패키지 설치
C:\class250615\react\lesson04_svr>npm i express mongodb cors
C:\class250615\react\lesson04_svr>npm i cors
입력하더라도 설치 안되는 경우 있음.

결과
added 81 packages, and audited 82 packages in 5s

14 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

프로젝트 실행 도구 (서버 코드 변경시 알아서 재시작)
C:\class250615\react\lesson04_svr>npm i -g nodemon

프로젝트 실행
C:\class250615\react\lesson04_svr>nodemon websrv.js

API 라우팅 테스트
1. 모든 todo 데이터 조회 : GET -> http://localhost:5000/api/todos 브라우저에서 직접 주소 입력으로 볼 수 있다.
curl -X GET http://localhost:5000/api/todos
(-X GET 생략가능)

2. 새로운 todo 데이터 추가 : POST -> db에게 보낼 데이터 작성해야 하므로 브라우저에서 테스트 할 수 없음. curl명령어로 테스트.
curl -X POST http://localhost:5000/api/todos ^
  -H "Content-Type: application/json" ^
  -d "{\"text\":\"저녁식사\"}"


3. 기존 todo데이터의 checked 속성 수정 : put 방식. 단, url로 id 값 지정.
curl -X PUT http://localhost:5000/api/todos/2 ^
  -H "Content-Type: application/json" ^
  -d "{\"checked\": false}"

4. 기존 todo 데이터 삭제 : DELETE 방식. 단, url로 id값 지정.
curl -X DELETE http://localhost:5000/api/todos/23 ^
  -H "Content-Type: application/json" ^
  -d "{\"checked\": false}"